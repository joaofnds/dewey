Expr is a Go-native expression language and bytecode-based evaluation engine designed for dynamic configuration and rule evaluation in backend systems. It compiles JavaScript-like expressions into optimized bytecode for safe, stateless execution within Go applications, featuring static type checking, memory safety, and guaranteed termination. The library targets DevOps, cloud infrastructure, and backend developers building rule engines, policy systems, workflow orchestration, and configuration management tools. Used extensively by Google Cloud Platform, Uber, Kubernetes projects like Argo and KEDA, and observability platforms like OpenTelemetry, it solves the problem of embedding secure, performant business logic evaluation without requiring separate rule engines or unsafe dynamic code execution, making it ideal for microservices, CI/CD pipelines, and cloud-native applications.