JSCL is a self-bootstrapped Common Lisp to JavaScript transpiler that enables Lisp development for web platforms and Node.js environments. Built entirely in Common Lisp and targeting web development and JavaScript runtime environments, it compiles Common Lisp source code into executable JavaScript while preserving essential Lisp semantics including multiple values, lexical/dynamic scoping, CLOS object system, control flow constructs (tagbody/go, catch/throw, block/return-from), SETF places, packages, and the LOOP macro. The compiler addresses the need for functional programming paradigms and Lisp's powerful macro system in JavaScript ecosystems, providing both browser-based REPL environments and command-line tooling via npm distribution. It primarily serves Lisp developers and functional programming enthusiasts who want to leverage Common Lisp's expressiveness while targeting modern web browsers and Node.js platforms for application deployment.