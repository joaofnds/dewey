Cl-cuda is a Common Lisp library that provides FFI bindings to NVIDIA CUDA driver APIs and a domain-specific language for defining GPU kernel functions using S-expressions. Targeting high-performance computing and GPU programming domains, it enables Common Lisp developers to write CUDA kernels without directly using CUDA C, offering kernel macros and symbol macros for enhanced abstraction. The library automatically compiles kernel definitions to CUDA C code (.cu files) and then to PTX modules via NVCC, managing the entire compilation and loading pipeline transparently. It includes high-level memory block abstractions for unified host/device memory management and low-level CFFI pointer interfaces for direct memory control. The system is designed for computational developers and researchers who need GPU acceleration in Common Lisp applications while avoiding the complexity of manual CUDA C integration.