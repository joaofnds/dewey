Mount is a state management library for Clojure and ClojureScript applications that provides an alternative to component-based architectures for managing application lifecycle and dependencies. It enables developers to define stateful resources (like database connections, web servers, or configuration) using the `defstate` macro with explicit `:start` and `:stop` lifecycle hooks, making these states directly referenceable as top-level vars across namespaces. The library is specifically designed to preserve REPL-driven development workflows by allowing individual states to be started, stopped, and reloaded without restarting the entire application, addressing the slow REPL startup times that hinder interactive development. Mount targets Clojure web developers and backend engineers who need to manage complex application state during development and production, offering features like selective state management, dependency ordering, state swapping for testing, and support for both JVM and JavaScript runtimes through ClojureScript compatibility.