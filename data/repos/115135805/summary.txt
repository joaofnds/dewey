April is a compiler that translates APL (Array Programming Language) code into Common Lisp, targeting data science and numerical computing domains. Built entirely in Common Lisp, it leverages Lisp's macro system and numeric processing capabilities to make APL's array manipulation primitives accessible within Lisp environments. The system addresses APL's traditional isolation problem by enabling seamless integration with databases, file systems, and other data sources through Lisp's connectivity features. April supports multiple Common Lisp implementations (SBCL, CCL, ECL, ABCL, Clasp) and compiles APL's symbolic array operations into optimized Lisp code. It targets Lisp developers and data scientists who need APL's concise array processing power without being confined to monolithic APL interpreters, allowing replacement of verbose numerical code with single-line APL expressions.