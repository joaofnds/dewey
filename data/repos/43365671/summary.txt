TypeDI is a dependency injection (DI) framework designed for TypeScript and JavaScript applications, implementing the Inversion of Control (IoC) pattern for web development and Node.js backend services. Built specifically for the TypeScript ecosystem, it leverages decorators and reflection metadata to provide constructor-based and property-based dependency injection, supporting both singleton and transient service lifecycles with multiple container management. The framework targets TypeScript/JavaScript developers building scalable web applications, APIs, and microservices who need to manage complex object dependencies and improve code testability. TypeDI solves the tight coupling problem in application architecture by automatically resolving and injecting service dependencies at runtime, enabling better separation of concerns and facilitating unit testing through dependency mocking.