Bend is a high-level programming language implemented in Rust that enables automatic parallelization of functional code across massively parallel hardware including multi-core CPUs and NVIDIA GPUs. Built on the HVM2 (Higher-order Virtual Machine) runtime using interaction combinators, it compiles to C/CUDA and automatically distributes computations without requiring explicit threading, locks, or parallel annotations. The language targets high-performance computing domains where algorithms can benefit from parallel execution, such as divide-and-conquer algorithms, tree operations, and computational workloads. Bend supports functional programming features including higher-order functions, closures, and immutable data structures while providing near-linear scaling with core count. It serves developers working on compute-intensive applications who want to leverage parallel hardware without the complexity of manual parallelization programming.