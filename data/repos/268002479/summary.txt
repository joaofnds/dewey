The NestJS Throttler is a TypeScript-based rate limiting module designed for Node.js web development using the NestJS framework. It provides configurable request throttling across multiple transport layers including HTTP (Express/Fastify), GraphQL, WebSockets, and RPC protocols. The module implements guard-based rate limiting with customizable time-to-live (TTL) and request limit parameters, featuring built-in memory storage with support for alternative storage providers. It addresses API security and resource protection by preventing abuse through IP-based request tracking with proxy support. The module offers decorator-based configuration (@Throttle, @SkipThrottle) for fine-grained control at controller and route levels. Target users are backend developers building scalable server-side applications who need to implement API rate limiting and DDoS protection mechanisms within the NestJS ecosystem.