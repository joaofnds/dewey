Coalton is a statically typed, functional programming language designed to supercharge Common Lisp, integrating directly into the Lisp environment. It enables compile-time type checking and error detection, enhancing code reliability within the Common Lisp ecosystem. This project acts as a compiler and standard library, featuring algebraic data types and facilitating the development of applications like a quantum computing compiler, and includes examples such as an implementation of *Typing Haskell in Haskell* and a Quil parser using parser combinators.  Targeting Common Lisp developers, Coalton aims to bring type safety and functional programming paradigms to Lisp projects.