Carp is a statically-typed Lisp programming language compiler implemented in Haskell, designed for real-time applications requiring deterministic performance without garbage collection. The language targets game development, sound synthesis, and interactive visualizations by providing automatic memory management through ownership tracking, inferred static types, and direct C interoperability. Carp compiles to native code with explicit allocation semantics, enabling functional programming patterns while maintaining cache-friendly data structures and predictable performance characteristics. The system includes Lisp macros, compile-time scripting capabilities, and a REPL for interactive development. It serves developers building performance-critical applications where garbage collection pauses are unacceptable, particularly in gaming and real-time multimedia domains, offering the expressiveness of functional programming with the control and speed of systems programming languages.