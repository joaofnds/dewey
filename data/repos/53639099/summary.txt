The Super Tiny Compiler is an educational JavaScript implementation that demonstrates fundamental compiler construction concepts through a minimal, fully-functional compiler. Written in vanilla JavaScript with comprehensive inline documentation, it implements core compiler phases including lexical analysis (tokenization), syntax analysis (parsing), semantic analysis (transformation), and code generation by translating LISP-style expressions into C-style function calls. Targeted at software engineers, computer science students, and developers interested in programming language theory, this pedagogical tool addresses the knowledge gap around compiler internals by providing a readable, step-by-step walkthrough of compilation processes. The repository serves the developer education domain, making traditionally complex compiler concepts accessible through practical implementation rather than abstract theory.