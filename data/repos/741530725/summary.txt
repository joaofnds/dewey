**asyncmachine-go** is a batteries-included graph control flow library written in Go, offering Aspect-Oriented Programming (AOP) and Actor Model functionalities through a clock-based state-machine. It focuses on workflow automation, concurrency management, and distributed systems, providing features such as atomic transitions, transparent RPC, TUI debugger, telemetry, REPL, remote workers, and diagrams.

As a lightweight, fault-tolerant library, it allows for graph-structured concurrency with goroutine cancellation while handling context, select, and panic. It aims to create autonomous workflows with organic control flow and stateful APIs, supporting binary flags, nodes in multigraphs, AOP aspects, metrics, traces, subscriptions, multiple methods, breakpoints, and more.

Besides workflows, it can be used for various applications like daemons, UIs, configs, bots, firewalls, synchronization consensus, games, smart graphs, microservice orchestration, contracts, simulators, real-time systems, and more. The library's technology stack includes Go, AOP, actor model, state-machine, libp2p-pubsub, and it functions as a library within the Go ecosystem. Target users include developers working on distributed systems, workflow automation, and concurrent applications in the Go domain.