TimL is a Clojure-inspired Lisp dialect that compiles to VimL (Vim script), targeting Vim text editor extensibility and plugin development. The project implements core Lisp language features including persistent data structures (vectors, hash maps, sets), macros with syntax quoting, namespaces, reference types (vars, atoms, futures), and an extensible type system with duck typing. It provides seamless VimL interoperability through direct access to Vim variables, options, functions, and commands, while offering a REPL environment and caching compiler that generates native VimL code. The language addresses the complexity and limitations of VimL by providing a more expressive functional programming paradigm for Vim plugin developers and power users who want to leverage Lisp's metaprogramming capabilities within the Vim ecosystem.