SICL is a modular, from-scratch implementation of the Common Lisp programming language designed for compiler and language implementation researchers and Common Lisp developers. The project emphasizes implementation-independent, portable modules that can be incorporated by other Common Lisp implementations, addressing the problem of maintaining implementation-specific versions of core language components. Built using a complex bootstrapping system with dependencies on multiple Lisp parsing and compilation libraries including Eclector, Clostrum, Trucler, and Concrete-Syntax-Tree, SICL targets programming language implementers who need a clean-room Common Lisp foundation. The system uses SBCL as its host implementation and provides a multi-phase boot process that creates isolated execution environments, enabling experimentation with language-level modifications and serving as a reference implementation for advanced Common Lisp features.