`clojure-ts-mode` is a next-generation Emacs major mode for Clojure and ClojureScript development that leverages Tree-sitter parsing technology to provide enhanced syntax highlighting, code indentation, and navigation capabilities. Built in Emacs Lisp, it addresses long-standing performance and accuracy limitations in the traditional `clojure-mode` by utilizing the `tree-sitter-clojure` grammar for faster, more granular font-locking and structured code analysis. The mode targets Clojure developers working in functional programming environments, offering improved editor integration features like `imenu` support, current form inference, and structured navigation. Requiring Emacs 30+ with Tree-sitter support, it serves as a modern replacement for legacy Clojure editing tools, specifically solving performance bottlenecks and parsing inaccuracies that plague traditional regex-based syntax highlighting in complex Lisp codebases.