Natalie is an experimental ahead-of-time Ruby compiler implementation that translates Ruby source code to native executables using C++ and GCC/Clang as compilation backends. Targeting programming language researchers and Ruby developers interested in alternative Ruby implementations, it provides both compilation-to-executable functionality and an incremental REPL environment. The project addresses Ruby's traditional interpretation overhead by generating compiled binaries while maintaining Ruby language semantics. Built with Ruby for the frontend compiler logic and C++ for runtime implementation, it aims to serve developers seeking performance improvements over standard MRI Ruby interpretation. The compiler currently supports core Ruby language features and standard library methods, positioning itself in the programming language implementation domain for systems programming and performance-critical Ruby applications.