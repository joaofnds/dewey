Guardian is a token-based authentication library for Elixir applications that provides JWT (JSON Web Token) implementation with support for custom token types through the Guardian.Token behavior. Built for web developers working with Elixir/Phoenix ecosystems, it integrates seamlessly with Plug middleware and Phoenix channels while remaining framework-agnostic for TCP/UDP protocols. The library solves authentication challenges by offering token encoding/decoding, verification, refresh, exchange, and revocation capabilities with configurable claims and multiple token type support. Developers implement Guardian by creating modules that define subject_for_token/2 and resource_from_claims/1 callbacks, enabling secure authentication across web endpoints, WebSocket connections, and custom protocols. It targets Elixir developers building web applications, APIs, and real-time systems requiring robust, stateless authentication mechanisms with tamper-proof tokens.