Futhark is a purely functional, data-parallel programming language compiler implemented in Haskell, designed for high-performance computing (HPC) and GPU programming domains. It targets computational scientists, researchers, and performance-oriented developers who need to write efficient parallel algorithms for CPUs and GPUs. The compiler generates optimized code for CUDA and OpenCL backends, enabling automatic parallelization of functional programs without explicit GPU programming complexity. Futhark addresses the challenge of making parallel computing accessible through high-level functional abstractions while maintaining performance comparable to hand-optimized GPU code. The language particularly serves scientific computing, machine learning, and data-intensive applications where massive parallelism is essential, providing a safer alternative to low-level CUDA/OpenCL programming while preserving the performance benefits of GPU acceleration.