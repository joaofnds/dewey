Salt is a Clojure-based transpiler that converts a subset of Clojure code into TLA+ specifications for formal verification and temporal logic analysis. Targeting software engineers and system architects working on distributed systems and concurrent programming, it bridges the gap between functional programming and formal specification languages. The tool provides an interactive REPL-based development environment, automated unit testing for invariants and actions, and direct mapping between Clojure constructs (sets, vectors, maps, functions) and TLA+ equivalents (sets, tuples, functions, operators). Salt addresses the steep learning curve of TLA+ by allowing developers familiar with Clojure to write formal specifications using familiar syntax, then transpile to native TLA+ code for execution in the TLA+ Toolbox for model checking and verification of system properties.