Lack is a Common Lisp web application framework that provides a modular middleware architecture for building HTTP applications. Originally part of the Clack web framework, it was extracted as a standalone library focused on application composition and middleware wrapping. The framework implements a WSGI-like interface where applications are functions that accept an environment property list (containing HTTP request data like method, path, headers) and return a three-element response list (status, headers, body). It supports both synchronous and asynchronous responses through callback mechanisms, enabling streaming and delayed responses. Lack targets Common Lisp web developers who need a minimalist, performance-oriented foundation for building web services and APIs, providing the core application layer while delegating HTTP server abstraction to Clack.