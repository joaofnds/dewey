This is a C# educational repository demonstrating Hexagonal Architecture (Ports and Adapters pattern) through a poetry application kata designed for live-coding sessions with Alistair Cockburn. The project implements a test-driven development approach to build a poetry reader system with configurable input/output adapters, featuring ports like IRequestVerses and IObtainPoems, adapters for console output, file reading, and potential JSON/database integration. Targeted at software developers and architects learning clean architecture patterns, it progressively builds from hard-coded responses to file-based poem retrieval with multiple adapter implementations. The kata emphasizes proper separation of concerns, dependency inversion, and the three-step hexagonal architecture initialization process, serving as a practical learning tool for understanding how to structure applications with pluggable external dependencies while maintaining a pure business logic core.