Idris2 is a purely functional programming language compiler implementation featuring dependent types and first-class type support, targeting academic researchers, programming language theorists, and developers working on formal verification and proof-driven development. Built as a self-hosted compiler written in Idris, it addresses the need for mathematically rigorous software development where types can express complex program properties and correctness proofs. The system enables dependent type programming, allowing types to depend on values for enhanced compile-time guarantees and formal program verification. Primary users include functional programming researchers, formal methods practitioners, and developers requiring high-assurance software with mathematical proof capabilities, particularly in domains like cryptography, theorem proving, and safety-critical systems where program correctness can be formally verified through the type system.