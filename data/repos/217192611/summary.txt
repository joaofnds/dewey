Cloture is a pre-alpha implementation of Clojure in Common Lisp, designed to enable interoperability between the two languages. It allows Clojure code to be read by the Lisp reader, and Clojure namespaces are mapped to Lisp packages. Key features include support for Clojure's concurrency primitives, FSet integration for data structures, and the ability to use Clojure libraries from Lisp and vice-versa. This project provides a Clojure REPL within a Common Lisp environment and exports Iterate drivers for working with Clojure protocols. It is a library project, targeting Common Lisp developers seeking to utilize or integrate with Clojure code.