**babashka/process** is a Clojure library designed for spawning and managing sub-processes from Clojure applications, targeting DevOps, automation, and system administration domains. Built specifically for the babashka ecosystem (a native Clojure interpreter for scripting), it provides high-level functions like `shell`, `process`, and `exec` for executing external commands, capturing output streams, handling exit codes, and managing process lifecycle. The library abstracts Java's ProcessBuilder complexity while offering features like automatic command tokenization, environment variable management, working directory control, and flexible I/O redirection (stdout/stderr to strings or files). It solves the common problem of reliably executing shell commands and system utilities from Clojure code without directly invoking shell interpreters, making it particularly valuable for Clojure developers building CLI tools, build automation scripts, deployment pipelines, and system integration solutions.