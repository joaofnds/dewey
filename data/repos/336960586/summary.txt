Rune is an experimental Rust-based reimplementation of the Emacs Lisp virtual machine and core editor functionality, targeting the developer tools and text editor domain. It implements a complete Emacs Lisp interpreter with bytecode VM, garbage collector, object system using tagged pointers, and bootstrapped elisp runtime pulled from Emacs 29.1. The project aims to maintain bug-compatibility with existing Emacs packages while enabling multi-threaded elisp execution and performance improvements through Rust's ecosystem. Key components include a hand-rolled lisp reader, global obarray environment, mark-and-sweep GC, and proc macros for defining builtin functions. The system targets Emacs developers and elisp package maintainers seeking enhanced performance and concurrency in their development environment while preserving compatibility with the extensive Emacs ecosystem.