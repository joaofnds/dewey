HVM2 (Higher-order Virtual Machine 2) is a massively parallel functional runtime built in Rust that implements an Interaction Combinator evaluator for executing high-level functional languages on parallel hardware architectures. The system serves as a low-level compilation target that translates programs from languages like Python and Haskell into interaction nets, enabling near-ideal speedup on GPUs through CUDA and multi-core CPUs via C backends. HVM2 addresses the fundamental challenge of parallelizing functional programming execution by providing a runtime that can automatically exploit massive parallelism without explicit parallel programming constructs. The technology targets compiler engineers, programming language researchers, and developers working on high-performance functional computing, offering interpretation modes through Rust, C, and CUDA, with compilation support for standalone C and CUDA executables optimized for production deployment.