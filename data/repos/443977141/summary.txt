HVM2 is a massively parallel evaluator for Interaction Combinators, designed to accelerate the execution of functional programs. This project provides a low-level intermediate representation (IR) and a compiler that translates this IR to C and CUDA, enabling near-ideal speedup on massively parallel hardware like GPUs. Users can compile high-level language code (e.g., Python, Haskell) to the HVM IR and subsequently generate C or CUDA code for execution, or interpret the HVM code directly via Rust. The primary technology stack involves Rust, C, and CUDA with a focus on parallel computation. It is a low-level runtime and compiler for high-level functional languages.