Gleam is a statically-typed functional programming language compiler implemented in Rust that targets the Erlang Virtual Machine (BEAM) and JavaScript runtimes. The compiler translates Gleam source code into Erlang bytecode, enabling developers to build concurrent, fault-tolerant distributed systems while leveraging Erlang/OTP's battle-tested actor model and supervision trees. Gleam addresses the challenge of building scalable backend systems by providing modern type safety, pattern matching, and immutable data structures on top of the proven Erlang ecosystem. The language targets backend developers and systems programmers who need the reliability and concurrency of Erlang/Elixir but prefer ML-style syntax with stronger static typing guarantees for building web servers, microservices, and distributed applications.