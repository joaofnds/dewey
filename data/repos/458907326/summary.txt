Melody is a domain-specific language (DSL) and compiler written in Rust that translates human-readable syntax into ECMAScript-compatible regular expressions. Targeting developers across web development, data processing, and text parsing domains, it addresses the notorious readability and maintainability challenges of complex regex patterns. The toolchain includes a Rust-based compiler, CLI interface, REPL, and web playground, supporting advanced regex features like quantifiers, character classes, Unicode categories, captures, and lookarounds. By providing intuitive syntax for common regex operations (e.g., "some of <word>" instead of "\w+"), Melody enables developers to write more comprehensible pattern matching code for tasks like input validation, log parsing, and data extraction while maintaining full regex functionality and performance.