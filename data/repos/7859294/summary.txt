This Common Lisp library implements Clojure's threading macros (`->`, `->>`) and Swiss-arrows extensions (`-<>`, `-<>>`), providing pipeline-style function composition for functional programming. The macros transform nested function calls into readable left-to-right data flow chains by automatically inserting intermediate results as arguments to subsequent functions. The `->` macro inserts as the first argument, `->>` as the last argument, while `-<>` and `-<>>` use diamond placeholder symbols for explicit positioning. Targeting Common Lisp developers working in functional programming paradigms, it addresses code readability and maintainability issues inherent in deeply nested function compositions. The library is distributed as an ASDF system and primarily serves developers building data transformation pipelines or complex functional operations requiring clear sequential data flow representation.