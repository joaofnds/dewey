Primalize is a Ruby serialization library that converts complex objects into primitive data structures (hashes, arrays, strings, numbers) for JSON, XML, or CSV output in web applications. It provides type-safe serialization through declarative attribute mapping with built-in type checking for integers, strings, booleans, arrays, enums, timestamps, and nested objects. The library offers two main classes: `Primalize::Single` for individual object serialization and `Primalize::Many` for nested response structures, supporting attribute coercion, virtual attributes, and configurable type mismatch handling. Primarily targeted at Ruby web developers building APIs and data interchange systems, it addresses the common problem of safely transforming ActiveRecord models or domain objects into structured data for client consumption while maintaining type safety and preventing serialization errors in production environments.