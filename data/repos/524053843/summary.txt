`lambdalisp` is a standalone Common Lisp interpreter implemented as an untyped lambda calculus term, enabling execution within various lambda calculus environments. This project provides a Lisp interpreter supporting features like closures, 32-bit integers, strings, reader macros, and object-oriented programming via closures, all operating through lambda calculus beta-reduction. The architecture leverages Common Lisp and is designed to run on interpreters such as SectorLambda, `clamb`, and `lazyk`, with binaries available for Binary Lambda Calculus (BLC), Universal Lambda (UL), and Lazy K (LK) languages, targeting researchers and enthusiasts interested in computation theory and programming language design.