This Go library implements runtime monkey patching by dynamically modifying executable memory to redirect function calls to replacement implementations. It operates at the assembly level by injecting jump instructions into running code, enabling developers to patch both standalone functions and instance methods during execution. Primarily targeted at Go developers for testing environments, it addresses the limitation that Go lacks built-in monkey patching capabilities found in dynamic languages. The library provides APIs for patching, unpatching, and guarding patches while calling original functions, making it useful for mocking dependencies, intercepting system calls, or modifying third-party library behavior in unit tests. However, it requires disabled compiler optimizations and is inherently unsafe for production use due to direct memory manipulation.