Jonathan is a high-performance JSON encoder and decoder library for Common Lisp that provides faster serialization/deserialization than existing solutions like jsown. The library supports multiple Lisp data representations including property lists, association lists, and jsown objects, with bidirectional conversion to/from JSON strings or byte arrays. It features compile-time optimization through compiler macros for encoding operations, customizable serialization methods via generic functions, and extensible object mapping for user-defined classes. Jonathan targets Common Lisp developers building web applications, REST APIs, and data interchange systems that require efficient JSON processing. The library addresses performance bottlenecks in JSON handling within the Lisp ecosystem, offering both runtime flexibility through multiple output formats and compile-time optimization for production use cases.