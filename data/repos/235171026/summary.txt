This repository contains C and Assembly language code examples demonstrating memory-mapped file operations using the mmap system call, created as educational material for a programming lecture. The codebase targets systems programming and low-level development domains, utilizing gcc compiler and NASM assembler for building native executables on Linux platforms. It serves as a practical tutorial for understanding memory mapping techniques, file I/O optimization, and direct memory manipulation at the operating system level. The examples address the fundamental problem of efficiently accessing and manipulating file contents by mapping them directly into process memory space, avoiding traditional read/write system call overhead. This educational resource is designed for systems programmers, computer science students, and developers learning low-level programming concepts who need to understand memory management and file system interactions in Unix-like environments.