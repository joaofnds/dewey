Enigma is a reimplementation of the Erlang Virtual Machine (BEAM) written in Rust, targeting the functional programming and concurrent systems domain. It aims to provide OTP 22+ compatibility for running Erlang and Elixir applications while leveraging Rust's safety and performance characteristics. The implementation features process scheduling built on Rust futures and Tokio's async runtime, supports core Erlang VM functionality including spawn/message passing, pattern matching, binaries, maps, and process management. It addresses the complexity barrier of the original BEAM VM (~300k SLOC) by providing a smaller, more accessible codebase for researchers and developers studying Erlang internals or experimenting with VM optimizations. The project targets Erlang/Elixir developers, VM researchers, and systems programmers interested in concurrent functional programming runtimes, offering a platform for rapid prototyping of VM features before potential inclusion in the official BEAM implementation.