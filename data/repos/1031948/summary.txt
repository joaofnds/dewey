Bordeaux-Threads is a portable concurrency abstraction library for Common Lisp that provides standardized threading primitives across different Lisp implementations. It exposes essential synchronization mechanisms including threads, mutexes, semaphores, condition variables, and atomic operations, abstracting away implementation-specific differences between SBCL, CCL, ABCL, and other Common Lisp systems. The library addresses the fragmented threading APIs across Lisp implementations by offering a unified interface for multi-threaded programming. Target users are Common Lisp developers building concurrent applications, particularly those requiring portability across multiple Lisp environments, including systems programming, web servers, parallel computation, and enterprise applications where thread-safe shared-state concurrency is essential for performance and correctness.