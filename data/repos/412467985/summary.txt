LispX is a JavaScript-based Lisp interpreter designed specifically for web development, addressing JavaScript's asynchronous programming complexity through delimited continuations that enable synchronous-style coding with async APIs. Built on John Shutt's vau calculus for metaprogramming capabilities, it implements a Lisp-2 with familiar Common Lisp syntax, object-oriented programming with single inheritance, generic functions, and a complete condition system for error handling. The ~3000-line implementation produces a sub-20KB minified build and runs across browsers, Node.js, Deno, and other JavaScript runtimes. Target users are web developers seeking functional programming paradigms with advanced control flow mechanisms, particularly those frustrated with JavaScript's Promise/callback-based asynchronous model who prefer Lisp's expressive syntax and powerful macro system for frontend and backend web applications.