Conjure is a Neovim plugin written in Fennel that provides interactive REPL-driven development for functional and dynamic programming languages. It enables live code evaluation within the editor for Clojure/ClojureScript (via nREPL), Fennel, Janet, Racket, Hy, Scheme, Guile, Common Lisp, Julia, Rust, Lua, and Python through various transport protocols including stdio, sockets, and network REPLs. The plugin facilitates conversational programming workflows where developers can evaluate expressions, forms, or entire buffers directly within their code editor and view results in persistent log buffers. Targeted at functional programming practitioners and Lisp developers, Conjure integrates with completion frameworks like deoplete and nvim-cmp, supporting the iterative development methodology common in REPL-driven languages where code is built and tested incrementally through live interaction with running programs.