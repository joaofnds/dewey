Halite is a constraint programming framework that provides a LISP-like domain-specific language for expressing formal constraints, built on top of the Choco constraint programming library and implemented in Clojure. It serves as the successor to the Salt project and targets formal verification, model checking, and constraint satisfaction problem domains. The tool enables developers and formal methods engineers to write declarative constraint specifications that can be solved using underlying constraint programming solvers. By combining functional programming paradigms from LISP with constraint programming capabilities, Halite addresses the complexity of expressing and solving constraint satisfaction problems in formal modeling contexts, making it suitable for applications requiring mathematical optimization, verification, and automated reasoning workflows.